		// bind_toggleable_prop (favorite_button, "favourited", "favourite", "unfavourite");
		// bind_toggleable_prop (reblog_button, "reblogged", "reblog", "unreblog");
		// bind_toggleable_prop (bookmark_button, "bookmarked", "bookmark", "unbookmark");
		//

	public void bind_toggleable_prop (ToggleButton button, string prop, string on, string off) {
		var init_val = Value (Type.BOOLEAN);
		((GLib.Object) status.formal).get_property (prop, ref init_val);
		button.active = init_val.get_boolean ();

		status.formal.bind_property (prop, button, "active", BindingFlags.DEFAULT);

		button.toggled.connect (() => {
			if (!(button.has_focus && button.sensitive))
				return;

			warning ("bruh");

			// button.sensitive = false;
			// var val = Value (Type.BOOLEAN);
			// ((GLib.Object) status.formal).get_property (prop, ref val);
			// var act = val.get_boolean () ? off : on;

			// var req = status.action (act);
			// req.await.begin ((obj, res) => {
			// 	try {
			// 		warning ("yeah");
			// 		var msg = req.await.end (res);
			// 		var node = network.parse_node (msg);
			// 		var entity = API.Status.from (node);

			// 		var new_val = Value (Type.BOOLEAN);
			// 		((GLib.Object) entity.formal).get_property (prop, ref new_val);
			// 		((GLib.Object) status.formal).set_property (prop, new_val.get_boolean ());
			// 	}
			// 	catch (Error e) {
			// 		warning (@"Couldn't perform action \"$act\" on a Status:");
			// 		warning (e.message);
			// 		app.inform (Gtk.MessageType.WARNING, _("Network Error"), e.message);
			// 	}
			// 	button.sensitive = true;
			// });
		});
	}



	protected void open_menu () {
		// FIXME: Gtk.Menu is gone.
		// var menu = new Gtk.Menu ();

		// var item_open_link = new Gtk.MenuItem.with_label (_("Open in Browser"));
		// item_open_link.activate.connect (() => Desktop.open_uri (status.formal.url));
		// var item_copy_link = new Gtk.MenuItem.with_label (_("Copy Link"));
		// item_copy_link.activate.connect (() => Desktop.copy (status.formal.url));
		// var item_copy = new Gtk.MenuItem.with_label (_("Copy Text"));
		// item_copy.activate.connect (() => {
		// 	var sanitized = HtmlUtils.remove_tags (status.formal.content);
		// 	Desktop.copy (sanitized);
		// });

		// if (is_notification) {
		//	 var item_muting = new Gtk.MenuItem.with_label (status.muted ? _("Unmute Conversation") : _("Mute Conversation"));
		//	 item_muting.activate.connect (() => status.update_muted (!is_muted) );
		//	 menu.add (item_muting);
		// }

		// menu.add (item_open_link);
		// menu.add (new SeparatorMenuItem ());
		// menu.add (item_copy_link);
		// menu.add (item_copy);

		// if (status.is_owned ()) {
		// 	menu.add (new SeparatorMenuItem ());

		// 	var item_pin = new Gtk.MenuItem.with_label (status.pinned ? _("Unpin from Profile") : _("Pin on Profile"));
		// 	item_pin.activate.connect (() => {
		// 		status.action (status.formal.pinned ? "unpin" : "pin");
		// 	});
		// 	menu.add (item_pin);

		// 	var item_delete = new Gtk.MenuItem.with_label (_("Delete"));
		// 	item_delete.activate.connect (() => {
		// 		status.annihilate ()
		// 			.then ((sess, mess) => {
		// 				streams.force_delete (status.id);
		// 			})
		// 			.exec ();
		// 	});
		// 	menu.add (item_delete);

		// 	var item_redraft = new Gtk.MenuItem.with_label (_("Redraft"));
		// 	item_redraft.activate.connect (() => new Dialogs.Compose.redraft (status.formal));
		// 	menu.add (item_redraft);
		// }

		// menu.show_all ();
		// menu.popup_at_widget (menu_button, Gravity.SOUTH_EAST, Gravity.SOUTH_EAST);
	}
